#!/usr/bin/php
<?php

namespace akmaljp\DriveMaru\Tests;

class Test {}

foreach (['AttributeName', 'TagName', 'TemplateParameterName']  as $type)
{
	$filepath = __DIR__ . '/../tests/Configurator/Validators/' . $type . 'Test.php';
	$class    = 'akmaljp\\DriveMaru\\Tests\\Configurator\\Validators\\' . $type . 'Test';

	include $filepath;

	$php = '';
	foreach ($class::getNames() as $input => $expected)
	{
		$quotedInput = json_encode($input);

		if (preg_match('#^Invalid#', $expected))
		{
			$php .= '
				/**
				* @testdox ' . $quotedInput . ' is invalid (' . substr($expected, 9) . ')
				*/
				public function testInvalid' . strtoupper(dechex(crc32($input))) . '()
				{
					$this->assertFalse(' . $type . '::isValid(' . $quotedInput . '));
				}
			';
		}
		else
		{
			$php .= '
				/**
				* @testdox ' . $quotedInput . ' is normalized to ' . json_encode($expected) . '
				*/
				public function testValid' . strtoupper(dechex(crc32($input))) . '()
				{
					$this->assertTrue(' . $type . '::isValid(' . $quotedInput . '));
					$this->assertSame(' . json_encode($expected) . ', ' . $type . '::normalize(' . $quotedInput . '));
				}
			';
		}
	}

	$file = file_get_contents($filepath);

	$startComment = '// Start of content generated by ../scripts/patchValidatorsTests.php';
	$endComment = "\t// End of content generated by ../scripts/patchValidatorsTests.php";

	$file = substr($file, 0, strpos($file, $startComment) + strlen($startComment))
		  . str_replace("\n\t\t\t", "\n", $php)
		  . substr($file, strpos($file, $endComment));

	file_put_contents($filepath, $file);
}

die("Done.\n");